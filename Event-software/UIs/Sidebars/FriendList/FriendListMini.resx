<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAACTUExURf///09dc0ZQYklYb0FRaj1OZztMZkNTa0dWbk1bckhTZkhXbktacEpWavb3+EZRYz5J
        XOLk5zA9UzZCV6astouToL7Cye/w8puirXaAkGRwg1lmelNhdtXY3MnM0mBsgJ+lsLW6wmt2iICJmI6W
        o3N9jre8xMLGzdze4lNcbGZte251giw5UM3R1ouQmqWpsFxkc0ob1gIAAA5kSURBVHhe1Z1pf6I8EMAr
        BAIFKXiBB96tPR7b/f6f7kkgKipBMplo+983/nZXYJzJXAnJk3miNN+tBtlwvJ4sprPObLqYrMfDbLDa
        5Wkk/s9fJc1X2XrmOYR6gRf6YecA+xwEHiWON1tnqzwV//9Pkc6Xr1y0IOz4Qqw6fCYqF/R1Of9LYqa7
        4ZQQJlt7woCQ6XD3F6SM9tnCpXaT3mT4NnUnWf67h+Z8SImnortLQo/Q4Vxc7dex31BiiyfVwSbeZi+u
        +YtIljaKeCXsWstEXPl3MFo7gXg4LAJnPRJXfzjpgFKdsScjpHTwG5xrMiSeeCR8PDJ8tLEmG9eDRIa2
        +J67eaSMycbB8y4ybOdhMqYb17x8HNvdPGI8Rtkd9HfAdrK7pzpvtjn/Uodnv4k734dkQcSd7wdZ3HE4
        Zo5J/ynDdzJxf9PsO/c10BNe5y756tZ9hAJLfHcrnsIc77NHKbDEm72LJzHEwDGRgaoQOgPxLCaI1lTc
        55HQtbHYmNuPVmBJaOfiiZAZuOIOj8c1Yqnj+wd5OWQsngqPaIFSxPuhbduV1jCYYIE8GBNbN822A+KQ
        2WQ9Hr+uJz5vg+vJaduoSdyeaD1OGBBvvJy/n3726H2UrQnRsYuQICY4b1o+JnAWy3rnt886OiWYi1Zu
        rDQEDImdNZWv+UajzeOuxFU00YgSPpne/J3TgQ3OI3CixsARl1OHztq1PAcedEBipHBwDdrtbx+BCxZ9
        La7AGnSU2kfJAmiqjuZYBHtRm+zEJdqSAW/laDX/d1AB6US9/5cDcx1X9beskEMFdECleDSBBQ4XXGok
        UC8O9nBDWHZPgAlcBM2QNUZGBhIx7MDS8AlQQFcnX8xAvjuciK8rsQFGYUcvIYZp0duIryswABa8ru46
        gyFo9BPloQ91o7oBmLEGGY+qQ02BJkoROrbRDJTBBWoReAIr22zQiL8kBQ0QtXsvgZGQ4sxk7kAOlSzF
        11sAHoRYq5mGoEHitB+KLIRCCPCmTRoXNMoIZ+LbN4H9gh3fF99HYA6y02Aovn6DPbAk1Az152xArq5l
        OgXsftmobeiUQOy0nRllwN6Xg+NHDwxAj+G1mAh/B9ooopspgWWNzu0J1CmsJeQjhcITA1BM9qfi61Le
        gAk3ugqfIthoIbcatNAmu4utQuYQYEHLFl+XAHUzNqA+u0UKy6y8xuQtBbqZNgNcnQ0stWp06rA4y/Kl
        hbgAKnuYT2iypwSqQoo0CXSBuLoqrrz1BlVhxzWz/gPoFeRKBKvQfhVXQCaHZsgyJYJVSE29NwDsZ8qU
        mEB7+B2CHwxLhsDfXDISoZcz5Ek5O2A3xa4tFFMKnKTsBAoNEjVgPSlZlgwrVziYyz4uEHdQxqtrEEMn
        mozFCg7c+YkLVBgBDaJNwQJnBTUscu3e19BRaCTrPgBM3NjPvhZXOAKO9hKbRwJYXzCuoj60bGJQk2+1
        gh38VccGOqIZ0hwJgwUwrWGDR1xBMAf7GbTJinrG4J+enJsW2CszbrQN9AAnWpd5DXwUdvzWswUQNPyD
        Jy5RoGOk5rJSDjggXpgp3BbYMDRUHJa8wVOtMzPVMFLDL5RBW/CcQFyDAc4cmIBmOjQnoHU+g5xmTOHD
        OTD/SuAKbKeVoA8PqzUpPDpT6NOdfCA8+TOZkh4ZgZV4nGqAX8JownYAWugzCzuUUPBY4ZurfSuIm6lz
        jBewNUgMk7VvBeCU5un54FZgNp05AneEos05Bw/DO+lwJm6njihdl/CMBnEFjZwInriJPie8Q4O9/qKe
        HJ5xiW6NRl2h/FIFhB+NrJnwC4DnfRnBd/EMZvmA21hpZBppd8ePy4cwSdITN4NQtOPh3XxG31xD/8A2
        FveC4PHSR6f67cRf5WOYI4otcS8IRVYz0TDzjtUznZn+xC/iXhB8vjQaHk8Zz6aVGPWtZ3EvEDOteMro
        Wj3wa1Wt+I6trrgXCBrpTFgwQsv6EM9ihPeepTMMi/pOI2PgWFbfZBX8YVk6w7Do1UCnygVdy6SzyfqW
        npF26E6n5VpgGbTTnNmonpHygKgV8BlMibGp3O2ZCainQt5JynQCPoc9Rf9HPBIuCCrkHUWtlIbDlGj9
        Z6TG2MbaKuRJzatOSlPwwkU0ERWZgFrRnuOPn9bgJsgBFhOtGH/Pn6c9c6TiFnDC9dNEfNSgsFP8vuJG
        M50pmTwtxCcdmJ3G6HE/1cxIBYunqfikBVMielD80Sqbjkz1SosDbCj2sdecILgZzgzeMj8jtOJP8WRI
        zPsYo5CBo8OijMJ9IeETx0iZDlHGIQM5YLB8BsVI2TjE8KWcZ9wa4yu2tAN1wQIjHhawkYioRFb56tWF
        RyY6Pf1zXjBHIlMhjp9hOY1+XiroWnhdKV5ViMtq4r/q1xZHWLWP1R/+hxQMi9pCuz48wtJTpMRmxHJu
        HD/D60ON2cNL0LpSGGWTgNX4un2aCrwrhTGh+M0kRFIh79PAl5pcw0oMBGfD3QyWCnmvTbNfegZTYl//
        JS/ef8JSIe+X6vW8L2DP1te1U26jaCrkPW+9eYsLmBJ1a4w9QoOtAo00554uYdV+X2u5YsQCBVI6U8CX
        aGvNH17Cu1I9nVqYFU2YKizmD/GSGg53E314kcEHIaYKizlg3bb+BewJLQvqbX64jeK5mSLg663FqKHo
        ngKztxH3Mog2KtZi6KynqYPbKcyhFm4U00YPi7ZwdVh2+SEilgJi2qhYE4VXAwu4nQJE5E183RnfS8S6
        NsTqooR3+a34Wc3djP7j37Jwf22xzwl8famMQsS+0rxpVpgoXj5aItaXwtcISymiokoOnpcaRPUyjMNW
        COB13nKYiGqlYiEhtoDH1+pws5qSZ+tZXL0dn0xAXDfKOK7VxyyCj8RqCfhPjC/g6X0L+DszDSi+bJL0
        8AWsbM8FX+4vpUjqVfjEdwaVlyU0XkWVQVS7GQaGSuXdNeTkm+F3xKXbg+/uqjuSoOsQsIgfutufnOqr
        ztjxwr7alaIFC+SReIwVHJ13ueto2E9MzjuySz/fcgDXTAns5WDoDtQSzt7H19pT4QrIJvcFa8ynODNS
        XDOFb1se+YhD8WJfDERfbc/gC8BSG0/Ey+060IJ+MNVZ4ZZqn2B34Gp/GqzpCwqJExWiKfDMgkuu82Kc
        bo1zPrwh4Jwkeb1PlMZeXyds5Wy0jgHGkeZ1T6IdjHznVa35JCNZ6//adZs96Hb3qY+32Htke3qDpnaz
        B/i+iRyP4m6emGkci8jMqX7vKnj6bRM6wF4FHS0paGv9AskhCcD9S0NKxtirZ0tGawcYOmSZv3py6tvU
        Xa9w/EsdydJ2AnVNSvc5VI36zDhfDYpXkmdTJ1DsI8m7YApKDD1Ch3P8VxDqSJZThyrYV8NWlW1HIrPN
        RWb23dEL0rcNaS1kU/3dRok2IeZts4ZotwlaHZHcuNvozflgm5LN7j62WUeedW671+bNOprnEil5faB4
        JfnWpo2Op/lshOZKePoI46xhN23KoW9tVNnQtbzLxl7taMihb55R0rQpk/H99dryLhewxbZHTRsV4h1m
        rkVTY7XNlFdTx+ZXaDFvGIVX3ZlamvJAnMPMtZg3aLDl0W8N5675XbUVFgZoPAm97dFvsrPzwmKJhfEd
        aRr57jUsaGh7dp78/EO+XsKKPx4XFaPPYuGURMaw/aSl7AzLYj2XFffvscNXHfuYLz+VLtpQOMPyaSmJ
        +6WIVu8xg3FbrpuSCahyDqn8LFkhYvyvRdhBJvlXWqhMQMUJIel5wEJE6z8zW2HIycp1YfJ1RbZiTSA/
        TlbcqP9h4iAyGfmHUKDUkaofki8/l5uvkOX0vu9VSaUbMQLlixfVz+Vm9b40e+NhkRMb3UDpxE+/dKGW
        9SLLt2DTzvKTq4v1o5z+s/nAsYoPBipf+Qacdo58aS3tHyzV6v8zu6/g28tRPnkuE0L3M04apoCOarR6
        /8zpcfV8kk9qoWwQgmPXviHLDY9qtPoW+qwFJ81O9tm4ulbdjZ4YNSXyJzVa/fgbOwXIN0f/wpCOQIar
        NS371iRiRY1W/N8nxvyvIF11exX5Ghe4O5qNh0FjB7WiRhY74i1OH3z01a+YZ6OBYrQdGivOcxkxhIzm
        3/2qed6QD6Xp0KzFCxmZkNb3Hup30rcv9iOJK5U0y4fUVVk1a/FSRiZk/+tHOWlNd98fvQvxbsnXcZE6
        Y40eteBCRitmqvj62bdtBiSj748L22S83JJP04tW2d0UsdM9JKtHmJS97lc2SprkTPer78/4SneM58bJ
        iQIXMdXImydDCvxuJXgcYGIyPsbbn7f5/j1JI06a5PvdKvv+tNi/icbEObfVx2JV5RgZBBK/zfRk0Yyr
        Iy4l7Qn4Z/ZX4h+v6N7+OVmy7SPnGNGi3bKIa2tVpIV1coIFfqLYekVdeOl32tNKexxiYJ/Gm7G/Sqiu
        ypdui7F3wNTkwt5rMxiPdOtcTy3PKtKxIegZq0nTSVtLPRB2b2iTCae6IohMTDbdl27bkXIGE7T7zHh5
        ebHYH/aJ/UUIu5RjuDn0Pmtcy2Acb2a+ibl1Vc0KD9/diqcwyr6D/yJdO2jHbNvrROY8Qo2h4aMWz0gW
        qk5VHzK572zQyL+vx/F8xDZQS5YYLw20xHZwV5G3JN2495HRdjePmlhPNnfQo+1s7j8deyIZG9Yj098j
        5eMkQ603I5rx6PDR8nHSAW3R5FAnpHTwuIUtF8DfjJASOOv7x4cmkswmeCOSXSv7DeZ5wXxDUYS0Cd2Y
        eQlHn4gL6emMydAj3r1e44CyzxYuBb2wzF8xWmT3qh60SEfDKSFKr/KEASHT4ejXuM4WpPPlK3XJbW36
        HiUufV3O/5J0R9J8tZ3MqEOoFwRhZWkH+xwETDSHzibbVf4nhasQpfluNciG4/VkMZ11ZtPFZD0eZoPV
        Lk+N+5Snp/8BDO4ENlxgfyIAAAAASUVORK5CYII=
</value>
  </data>
</root>