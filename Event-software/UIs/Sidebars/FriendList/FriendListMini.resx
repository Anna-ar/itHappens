<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="friendProfilePicOvalPictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>